// <auto-generated />
using System;
using MakeYourBusinessGreen.Infrastructure.Persistence.Contexts;
using MakeYourBusinessGreen.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MakeYourBusinessGreen.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ReadDbContext))]
    [Migration("20220225144546_ReadInit")]
    partial class ReadInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MakeYourBusinessGreen")
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MakeYourBusinessGreen.Application.Models.OfficeReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offices", "MakeYourBusinessGreen");
                });

            modelBuilder.Entity("MakeYourBusinessGreen.Application.Models.StatusChangedEventReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("From")
                        .HasColumnType("int");

                    b.Property<string>("ModeratorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SuggestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("To")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SuggestionId");

                    b.ToTable("StatusChangeEvents", "MakeYourBusinessGreen");
                });

            modelBuilder.Entity("MakeYourBusinessGreen.Application.Models.SuggestionReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("Suggestions", "MakeYourBusinessGreen");
                });

            modelBuilder.Entity("MakeYourBusinessGreen.Application.Models.StatusChangedEventReadModel", b =>
                {
                    b.HasOne("MakeYourBusinessGreen.Application.Models.SuggestionReadModel", "Suggestion")
                        .WithMany("StatusChangedEvents")
                        .HasForeignKey("SuggestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Suggestion");
                });

            modelBuilder.Entity("MakeYourBusinessGreen.Application.Models.SuggestionReadModel", b =>
                {
                    b.HasOne("MakeYourBusinessGreen.Application.Models.OfficeReadModel", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("MakeYourBusinessGreen.Application.Models.SuggestionReadModel", b =>
                {
                    b.Navigation("StatusChangedEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
